name: docs

on:
  push:
    paths:
      - 'docs/**'
      - '.github/workflows/docs.yml'
    branches:
      - '**'

  pull_request:
    paths:
      - 'docs/**'
      - '.github/workflows/docs.yml'
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        working-directory: ./docs
        run: bun install --frozen-lockfile

      - name: Build for production
        working-directory: ./docs
        run: bun run build --configuration=production --verbose

      - name: Upload artifacts

        uses: actions/upload-artifact@v4
        with:
          name: Docs-artifacts
          path: docs/dist/
          if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      deployments: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: Docs-artifacts
          path: docs/dist/

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.DOCS_CLOUDFLARE_API_TOKEN }}
          accountId: 034f5089bb082eb57cefc432b42b984d
          workingDirectory: 'docs'
          command: pages deploy dist --project-name=fct-app-docs --commit-dirty=true

      - name: Create GitHub Deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/cacic-fct/fct-app/deployments
          mediaType: '{"previews":["ant-man", "flash"]}'
          body: ${{ toJSON(env.REQUEST_BODY) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REQUEST_BODY: |
            {
               "ref": "${{ github.sha }}",
               "environment": "production",
               "environment_url": "https://docs.fctapp.cacic.dev.br",
               "description": "fct-app-docs",
               "transient_environment": false,
               "production_environment": true
             }

  scrape:
    if: ${{github.ref == 'refs/heads/main'}}
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Algolia crawler creation and crawl
        uses: algolia/algoliasearch-crawler-github-actions@v1.1.10
        id: algolia_crawler
        with:
          crawler-user-id: ${{ secrets.DOCS_ALGOLIA_CRAWLER_USER_ID }}
          crawler-api-key: ${{ secrets.DOCS_ALGOLIA_CRAWLER_API_KEY }}
          algolia-app-id: ${{ secrets.DOCS_ALGOLIA_APP_ID }}
          algolia-api-key: ${{ secrets.DOCS_ALGOLIA_API_KEY }}
          site-url: 'https://docs.fctapp.cacic.dev.br'
          crawler-name: 'fctapp-yudi'
